!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.Othello=r():e.Othello=r()}(this,(()=>(()=>{"use strict";var e={156:function(e,r,t){var o=this&&this.__createBinding||(Object.create?function(e,r,t,o){void 0===o&&(o=t);var i=Object.getOwnPropertyDescriptor(r,t);i&&!("get"in i?!r.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,o,i)}:function(e,r,t,o){void 0===o&&(o=t),e[o]=r[t]}),i=this&&this.__exportStar||function(e,r){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(r,t)||o(r,e,t)};Object.defineProperty(r,"__esModule",{value:!0}),i(t(281),r)},281:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.findWinner=r.placeCoin=r.areAllPositionsFilled=r.isInvalidTurn=r.createBoard=void 0;const t=([e,r],t)=>[e<0,r<0,e>t-1,r>t-1].some((e=>e)),o=([e,r],t)=>e===t||r===t,i=([e,r])=>e<0||r<0;r.createBoard=(e,[{symbol:r},{symbol:t}])=>{const o={"3_4":r,"3_3":t,"4_3":r,"4_4":t};return{places:Array.from({length:e}).map(((r,t)=>Array.from({length:e}).map(((e,r)=>o[`${t}_${r}`])))),size:e}},r.isInvalidTurn=(e,[r,t])=>!!e.places[r][t],r.areAllPositionsFilled=e=>e.places.every((e=>e.every((e=>e)))),r.placeCoin=({board:e,player:{symbol:r}},n)=>{const s=(l=e,{places:Array.from({length:l.size}).map(((e,r)=>Array.from({length:l.size}).map(((e,t)=>l.places[r][t])))),size:l.size});var l;return s.places[n[0]][n[1]]=r,[[0,1],[1,0],[1,1],[0,-1],[-1,0],[-1,-1],[-1,1],[1,-1]].reduce(((e,s)=>((e,r,[n,s],l)=>{if(o([r[0]+n,r[1]+s],e.size))return e;if(i([r[0]+n,r[1]+s]))return e;let a,c=[r[0]+n,r[1]+s];for(;!o(c,e.size)&&!i(c);){if(e.places[c[0]][c[1]]===l){if(c[0]-n===r[0]&&c[1]-s===r[1])break;a=[c[0],c[1]];break}if(void 0===e.places[c[0]][c[1]])break;c=[c[0]+n,c[1]+s]}return void 0===a||((e,r,o,i)=>{const n=[];let s=e;for(;!t(s,i)&&(s[0]!==r[0]||s[1]!==r[1]);)n.push(s),s=[s[0]+o[0],s[1]+o[1]];return n.slice(1)})(r,a,[n,s],e.size).forEach((r=>{e.places[r[0]][r[1]]=l})),e})(e,n,s,r)),s)},r.findWinner=(e,t)=>{if(!(0,r.areAllPositionsFilled)(e))return;const o=Object.fromEntries(t.map((e=>[e.symbol,0]))),i=e.places.reduce(((e,r)=>{const t=r.reduce(((e,r)=>({...e,[r]:e[r]+1})),o);return Object.fromEntries(Object.keys(e).map((r=>[r,e[r]+t[r]])))}),o),[n,s]=t,l=i[n.symbol],a=i[s.symbol];return l===a?[n,s]:l>a?[n]:[s]}}},r={};return function t(o){var i=r[o];if(void 0!==i)return i.exports;var n=r[o]={exports:{}};return e[o].call(n.exports,n,n.exports,t),n.exports}(156)})()));